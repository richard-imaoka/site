<h2>Journal of Systems and Software, Springer's academic journal for software engineering</h2>

<p>
  <a href="http://www.journals.elsevier.com/journal-of-systems-and-software">Journal of Systems and Software</a> provides you state of the art researches in software engineering,
  including but not only limited to below:
  <ul>
    <li>Methods and tools for, and empirical studies on, software requirements, design, architecture, verification and validation, maintenance and evolution</li>
    <li>Agile, model-driven, service-oriented, open source and global software development</li>
    <li>Human factors and management concerns of software development</li>
    <li>Metrics and evaluation, data mining of software development resources</li>
    <li>Business and economic aspects of software development processes</li>
  </ul>

  where a <a href="http://www.sciencedirect.com/science/journal/01641212">sample issue</a> looks like this.
  One article I reviewed before,
</p>

<h2>Software Engineering is really worth studying?</h2>
<p>
  By saying Software Engineering, I am only talking about the stuff like project and software management, cost analysis, systems development processes.
</p>

<p>
  Some people are skeptical about the value of Software Engineering for such matters.
  Even a famous computer scientist <a href="https://www.quora.com/Do-you-agree-with-Edsger-Dijkstras-opinion-of-Software-Engineering-and-why">Edsger Dijkstra criticized Software Engineering</a> back in 1980s.
</p>

<p>
  It is true that Software Engineering doesn't have as strict and robust models as other engineering like Mechanical Engineering.
  Since software is created as a result of human activities, sometimes from hundreds of people, it is <strong>impossible</strong> to give a robust mathematical model to describe the dynamics.
</p>

<p>
  Rather, I would think Software Engineering as a <strong>Social Science</strong> field.
  You cannot apply the same mathematical model to every single problem.
  However, still empirical studies give you probabilistic and statistical sense on how the software development and maintenance would go.
  Also studies like Psychology and Game Theories would give explanation about behavior and motivation of your programmer colleagues.
  And finally Economic and Financial studies would help you make economically sound judgement at any point of software development and maintenance life cycle.
</p>

