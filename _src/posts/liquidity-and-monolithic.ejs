<h2>Replacing a huge, monolithic software system is more expensive than replacing small-pieced system</h2>

<p>
  Let's assume you have a huge monolithic system and its replacement cost to a newer system is represented as follows.
</p>
  <figure>
  <img src="<%- cloudinary%>/images/posts/arbitrage-software-liquidity-replace-monolithic.png">
</figure>

<p>
  If you split up the monolithic system into smaller components,
</p>
<figure>
  <img src="<%- cloudinary%>/images/posts/arbitrage-software-liquidity-replace-split.png">
</figure>

<p>
  Then you would be able to replace each component individually. And each of them has its own replacement cost.
</p>
<figure>
  <img src="<%- cloudinary%>/images/posts/arbitrage-software-liquidity-replace-small.png">
</figure>

<p>
  Comparing the sum of small-component replacement and monolithic replacement, it tends to be that the replacement of the monolithic system is more expensive.
  Let's call this as "Monolithic Spread" - this is the cost you are paying for your monolithic (i.e.) illiquid, harder-to-replace system.

  It can be explained that smaller piece of the system is easier to replace, thus lower cost.
</p>

<figure>
  <img src="<%- cloudinary%>/images/posts/arbitrage-software-liquidity-replace-spread.png">
</figure>

<h2>Monolithic spread matters on replacement, but there is an opposite effect on maintenance cost</h2>
<p>
  Thinking about replacement, it feels like your system should always be split up into smaller pieces so that each component can be
  easily replaced by newer technology.
</p>

<p>
  However, there is a known counter effect talking about maintenance cost. In certain cases, dividing up a monolithic system into smaller pieces
  can cause more maintenance cost. So if you have no immediate plan of software replacement, you should be careful.
</p>

<p>
  We will cover that topic in the next article.
</p>
