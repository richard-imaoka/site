{
  "arbitrage-and-replacement": {
    "title": "New Framework, Library? Think of the Balance between Cost-Saving and Replacement-Cost Effects",
    "description": "Developers often know more modern technologies used outside their companies, which would resolve their problems, but they need to stick to the current technology stack. Let's discuss why that happens in more detail, to remove blocks to go to the right direction.",
    "date": "2016-01-30",
    "categories": ["quantitative software engineering"]
  },
  "replacement-cost-in-detail": {
    "title": "Software Replacement: Comparison between Cost-Saving and Replacement-Cost Effects",
    "description": "When replacing legacy software with new one, for cost saving purposes, you need to think about replacement cost as well. And comparison cannot be solid as it is probabilistic.",
    "date": "2016-01-30",
    "categories": ["quantitative software engineering"]
  },
  "end-to-end-state-comparison-not-complete": {
    "title": "New Framework, Library? Think of the Balance between Cost-Saving and Replacement-Cost Effects",
    "description": "Developers often know more modern technologies used outside their companies, which would resolve their problems, but they need to stick to the current technology stack. Let's discuss why that happens in more detail, to remove blocks to go to the right direction.",
    "date": "2016-01-30",
    "categories": ["quantitative software engineering"],
    "references": [
      {
        "author": "Vikas Hazrati",
        "title" : "Code is Liability, the Less the Better",
        "citation" : "InfoQ website, on May 18, 2011",
        "link": "http://www.infoq.com/news/2011/05/less-code-is-better"
      },
      {
        "author": "Martin Fowler",
        "title" : "TechnicalDebt",
        "citation" : "Martin Flower.com, 1 October 2003",
        "link": "http://martinfowler.com/bliki/TechnicalDebt.html"
      },
      {
        "author": "Ward Cunningham",
        "title" : "Ward Explains Debt Metaphor",
        "citation" : "Cunningham & Cunningham, Inc.",
        "link": "http://c2.com/cgi/wiki?WardExplainsDebtMetaphor"
      }
    ]
  },
  "arbitrage-software-complex-derivative-2": {
    "title": "Software as a complex derivative contract",
    "description": "To make right investment decisions for software, you need to correctly analyze the cost and revenue structure of the software. Thinking about Financial derivatives and its arbitrage relationship, you can tell how to price financial contracts.",
    "date": "2016-01-28",
    "categories": ["quantitative software engineering"]
  },
  "arbitrage-software-complex-derivative-1": {
    "title": "Software as a complex derivative contract",
    "description": "To make right investment decisions for software, you need to correctly analyze the cost and revenue structure of the software. You can assume software as a complex derivative contract to make this analysis.",
    "date": "2016-01-28",
    "categories": ["quantitative software engineering"]
  },
  "arbitrage-software-selling": {
    "title": "Pricing Software in Financial Arbitrage Context - Forms of selling software",
    "description": "",
    "date": "2016-01-27",
    "categories": ["quantitative software engineering"]
  },
  "arbitrage-software-buying": {
    "title": "Pricing Software in Financial Arbitrage Context - Forms of buying software",
    "description": "",
    "date": "2016-01-27",
    "categories": ["quantitative software engineering"]
  },
  "arbitrage-software-intro": {
    "title": "Pricing Software in Financial Arbitrage Context - Intro",
    "description": "Let's start a discussion on pricing software under a Financial arbitrage context. Pricing a contract under the arbitrage context is a fundamental technique in Finance, so we are introducing the same technique in software pricing.",
    "date": "2016-01-26",
    "categories": ["quantitative software engineering"]
  },
  "software-engineering-craftmanship-vs-quantitative-analysis": {
    "title": "Software Engineering, complemented by Financial Engineering for quantitative analysis, business decisions",
    "description": "Programmers are passionate about better software, and better methodologies. We have seen tremendous growth in software technologies and methodologies, but yet business decisions on software projects haven't been improved over the last 20 to 30 years.",
    "date": "2016-01-23",
    "categories": ["quantitative software engineering"],
    "references": [
      {
        "author" : "Signed on by more than 17,000 developers",
        "title"  : "Software Craftsmanship Manifesto",
        "citation" : "Manifesto for Software Craftsmanship, 2009",
        "link": "http://manifesto.softwarecraftsmanship.org/"
      },
      {
      "author" : "International Project Leadership Academy",
      "title"  : "Facts and Figures",
      "citation" : "McKinsey & Company in conjunction with the University of Oxford, 2012",
      "link": "http://calleam.com/WTPF/?page_id=1445"
      },
      {
        "author" : "Taylor Putnam-Majarian and Doug Putnam",
        "title"  : "The Most Common Reasons Why Software Projects Fail",
        "citation" : "InfoQ.com article on Jul 13, 2015",
        "link": "http://www.infoq.com/articles/software-failure-reasons"
      }
    ]
  },
  "journals-of-systems-and-software": {
    "title": "Introducing Springer's Journals of Systems and Software",
    "description": "Let me introduce an academic journal, ' Journals of Systems and Software' published by Springer. Like other scientific fields, you can find advanced and theoretical analysis of software engineering in academic literature.",
    "date": "2016-01-23",
    "categories": ["quantitative software engineering"],
    "references": [
      {
        "author": "Springer",
        "title" : "Journal of Systems and Software",
        "citation" : "publishes papers covering all aspects of software engineering and related hardware-software-systems issues.",
        "link": "http://www.journals.elsevier.com/journal-of-systems-and-software/"
      }
    ]
  },
  "pricing-and-accounting-software-debt": {
    "title": "Pricing and Accounting Software - Debt",
    "description": "In this article we'll review Financial and Technical debt again. We will see what makes us software call in the 'debt' metaphor, and ",
    "date": "2016-01-22",
    "categories": ["quantitative software engineering"],
    "references": [
      {
        "author": "@kellan",
        "title" : "Towards an understanding of technical debt",
        "citation" : "https://medium.com/@kellan",
        "link": "https://medium.com/@kellan/towards-an-understanding-of-technical-debt-ae0f97cc0553#.r6mlbeosv"
      },
      {
        "author": "Ward Cunningham",
        "title" : "Ward Explains Debt Metaphor",
        "citation" : "Cunningham & Cunningham, Inc.",
        "link": "http://c2.com/cgi/wiki?WardExplainsDebtMetaphor"
      }
    ]
  },
  "pricing-and-accounting-software-asset": {
    "title": "Pricing and Accounting Software - Asset",
    "description": "In this article we explore possibilities of accounting software as asset. In previous articles, we have investigated ideas of representing software in terms of accounting, although they are not strict argument in accounting theories",
    "date": "2016-01-22",
    "categories": ["quantitative software engineering"],
    "references": [
      {
        "author": "InvestoPedia",
        "title" : "InvestoPedia",
        "citation" : "Discounted Cash Flow (DCF)",
        "link": "http://www.investopedia.com/terms/d/dcf.aspm"
      },
      {
        "author": "InvestoPedia",
        "title" : "InvestoPedia",
        "citation" : "Intangible Asset",
        "link": "http://www.investopedia.com/terms/i/intangibleasset.aspm"
      }
    ]
  },
  "pricing-and-accounting-software-income": {
    "title": "Pricing and Accounting Software - Income",
    "description": "We have looked into accounting for software about its expense in earlier articles. This articles analyzes the income side of software accounting.",
    "date": "2016-01-21",
    "categories": ["quantitative software engineering"]
  },
  "pricing-and-accounting-software-expenses-rescuetime": {
    "title": "Pricing and Accounting Software - Expenses, Time-Tracking with RescueTime",
    "description": "In the previous article, we demonstrated that if we know the time usage of each person, we can calculate the maintenance cost of software. Let's explore a method to track time usage here.",
    "date": "2016-01-21",
    "categories": ["quantitative software engineering"],
    "references": [
      {
        "author": "Rescue Time",
        "title" : "https://www.rescuetime.com",
        "citation" : "Rescue Time website",
        "link": "https://www.rescuetime.com"
      }
    ]
  },
  "pricing-and-accounting-software-expenses-time-tracking": {
    "title": "Pricing and Accounting Software - Expenses, Time-Tracking for Maintenance Cost Calculation",
    "description": "In the previous article, we demonstrated that if we know the time usage of each person, we can calculate the maintenance cost of software. Let's explore a method to track time usage here.",
    "date": "2016-01-19",
    "categories": ["quantitative software engineering"]
  },
  "pricing-and-accounting-software-expenses": {
    "title": "Pricing and Accounting Software - Expenses",
    "description": "Let's continue explaining software in terms of accounting",
    "date": "2016-01-18",
    "categories": ["quantitative software engineering"]
  },
  "refactoring-and-technical-debt": {
    "title": "Refactoring Software is Explained in Financial Accounting Context",
    "description": "'Technical Debt' is a known metaphor in Software Engineering. We already explained how enhancement can be explained in the Financial Accounting context, so how it works for refactoring?",
    "date": "2016-01-17",
    "categories": ["quantitative software engineering"],
    "references": [
      {
        "author": "Martin Fowler",
        "title" : "Refactoring Improving the Design of Existing Code",
        "citation" : "Martin Flower.com",
        "link": "http://martinfowler.com/books/refactoring.html"
      }
    ]
  },
  "enhancement-and-technical-debt": {
    "title": "Software Enhancement is Explained in Financial Accounting Context",
    "description": "'Technical Debt' is a known metaphor in Software Engineering. So, how Financial Accounting theory helps you understand the relationship and enhancement and technical debt?",
    "date": "2016-01-17",
    "categories": ["quantitative software engineering"],
    "references": [
      {
        "author": "Vikas Hazrati",
        "title" : "Code is Liability, the Less the Better",
        "citation" : "InfoQ website, on May 18, 2011",
        "link": "http://www.infoq.com/news/2011/05/less-code-is-better"
      },
      {
        "author": "Martin Fowler",
        "title" : "TechnicalDebt",
        "citation" : "Martin Flower.com, 1 October 2003",
        "link": "http://martinfowler.com/bliki/TechnicalDebt.html"
      },
      {
        "author": "Ward Cunningham",
        "title" : "Ward Explains Debt Metaphor",
        "citation" : "Cunningham & Cunningham, Inc.",
        "link": "http://c2.com/cgi/wiki?WardExplainsDebtMetaphor"
      }
    ]
  },
  "technical-debt-from-a-single-line": {
    "title": "Single Line of Source Code is still Technical Debt",
    "description": "'Technical Debt' is a known metaphor in Software Engineering. Let's describe Technical Debt in terms of Financial debt",
    "date": "2016-01-17",
    "categories": ["quantitative software engineering"],
    "references": [
      {
        "author": "Vikas Hazrati",
        "title" : "Code is Liability, the Less the Better",
        "citation" : "InfoQ website, on May 18, 2011",
        "link": "http://www.infoq.com/news/2011/05/less-code-is-better"
      },
      {
        "author": "Martin Fowler",
        "title" : "TechnicalDebt",
        "citation" : "Martin Flower.com, 1 October 2003",
        "link": "http://martinfowler.com/bliki/TechnicalDebt.html"
      },
      {
        "author": "Ward Cunningham",
        "title" : "Ward Explains Debt Metaphor",
        "citation" : "Cunningham & Cunningham, Inc.",
        "link": "http://c2.com/cgi/wiki?WardExplainsDebtMetaphor"
      }
    ]
  },
  "review-stochastic-cost-estimation-monte-carlo": {
    "title": "Review of 'Stochastic Cost Estimation and Risk Analysis in Managing Software Projects' paper",
    "description": "I found an interesting paper - 'Stochastic Cost Estimation and Risk Analysis in Managing Software Projects' - which presents a method to analyze project duration using Monte Carlo Simulation. Monte Carlo is a typical simulation method in Financial Engineering, so it's interesting to see the bridge between Financial Engineering and Quantitative Software Engineering",
    "date": "2016-01-16",
    "categories": ["quantitative software engineering"],
    "references": [
      {
        "author": "Connor, AM; MacDonell, SG",
        "title" : "Stochastic cost estimation and risk analysis in managing software projects",
        "citation" : "Proceedings of the ISCA 14th International Conference on Intelligent and Adaptive Systems and Software Engineering (IASSE). Toronto, Canada, ISCA, pp.140-144",
        "link": "http://aut.researchgateway.ac.nz/handle/10292/1591"
      }
    ]
  },
  "uncertainty-as-risk-in-software-project": {
    "title": "Risk means Uncertainty in Financial Engineering, so does in Software Projects",
    "description": "In Financial Engineering, the word 'risk' means uncertainty. For example, if you buy Facebook's stock you don't know its price tomorrow. That's uncertainty, and a risk. Similarly in software projects, you don't know when your project finishes. That is a risk too.",
    "date": "2016-01-14",
    "categories": ["quantitative software engineering"]
  },
  "financial-engineering-in-software-projects": {
    "title": "Financial Engineering of Software Projects",
    "description": "Through the history of computers, we have seen explosive growth in the software industry, and people have made tremendous but still ever-growing investment in technologies and methodologies in software development.",
    "date": "2016-01-13",
    "categories": ["quantitative software engineering"]
  },
  "about": {
    "title": "About Richard Imaoka",
    "description": "About Richard Imaoka - a professional programmer, and an amateur Quant."
  }
}